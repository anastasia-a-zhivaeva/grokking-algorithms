version: 2.1
jobs:
  lint:
    working_directory: ~/repo
    docker:
      - image: circleci/node:14.15
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Lint
          command: npm run lint
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/node:14.15
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Test
          command: npm test
      - run:
          name: Generate code coverage
          command: npm run coverage
      - run:
          name: Configue git user
          command: git config user.email "anastasia.a.zhivaeva@gmail.com" && git config user.name "anastasia-a-zhivaeva"
      - run:
          name: Update README with code coverage results
          command: git add 'README.md' && git commit --allow-empty -m "Update coverage [skip ci]" && git push -u origin master
  publish:
    working_directory: ~/repo
    docker:
      - image: circleci/node:14.15
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Add token to .npmrc
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN_FULL_ACCESS}" > ~/.npmrc
      - run:
          name: Configue git user
          command: git config user.email "anastasia.a.zhivaeva@gmail.com" && git config user.name "anastasia-a-zhivaeva"
      - run:
          name: Pull repository
          command: git pull
      - run:
          name: Detect version type, Change version and Publish
          command: |
            GIT_COMMIT_DESC="$(git log --format=oneline -n 1 $CIRCLE_SHA1)"
            echo $GIT_COMMIT_DESC

            if [[ ! $GIT_COMMIT_DESC == *"feature"* ]] && [[ ! $GIT_COMMIT_DESC == *"fix"* ]] && [[ ! $GIT_COMMIT_DESC == *"release"* ]]; then
              echo "Do not release"
              exit 0
            fi

            if [[ $GIT_COMMIT_DESC == *"release"* ]]; then
              echo "Major"
              npm version major -m "Bumped to version %s [ci skip]"
            fi

            if [[ $GIT_COMMIT_DESC == *"feature"* ]]; then
              echo "Minor"
              npm version minor -m "Bumped to version %s [ci skip]"
            fi

            if [[ $GIT_COMMIT_DESC == *"fix"* ]]; then
              echo "Patch"
              npm version patch -m "Bumped to version %s [ci skip]"
            fi

            git add . && git commit
            npm publish --access public

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - lint
      - test:
          requires:
            - lint
          filters:
            branches:
              only: master
      - publish:
          context:
            - NPM_TOKEN
          requires:
            - test
          filters:
            branches:
              only: master
